C51 COMPILER V9.00   MAIN                                                                  08/22/2015 13:46:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************BST-M51实验开发板例程************************
   2          *  平台：BST-M51 + Keil U4 + STC89C52
   3          *  名称：18b20温度显示（数码管）实验
   4          *  公司：深圳市亚博软件开发有限公司       
   5          *  日期：2015-7
   6          *  晶振:11.0592MHZ
   7          *  实验效果：接上18B20温度传感器数码管显示出当前温度
   8          ******************************************************************/
   9          #include <reg52.h>
  10          #define uchar unsigned char
  11          #define uint unsigned int
  12          #define dula P0         //段选信号的锁存器控制
  13          sbit wei1=P2^4;
  14          sbit wei2=P2^5;
  15          sbit wei3=P2^6;
  16          sbit wei4=P2^7;
  17          sbit DS=P2^2;           //define interface
  18          uint temp;             // variable of temperature
  19          
  20          unsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,
  21                                  0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  22          unsigned char code table1[]={0xbf,0x86,0xdb,0xcf,0xe6,0xed,0xfd,
  23                                  0x87,0xff,0xef};
  24          
  25          void delay(uint count)      //delay
  26          {
  27   1        uint i;
  28   1        while(count)
  29   1        {
  30   2          i=200;
  31   2          while(i>0)
  32   2          i--;
  33   2          count--;
  34   2        }
  35   1      }
  36          
  37          
  38          void dsreset(void)       //send reset and initialization command
  39          {
  40   1        uint i;
  41   1        DS=0;                       
  42   1        i=103;                                   //将总线拉低480us~960us
  43   1        while(i>0)i--;
  44   1        DS=1;                                    //然后拉高总线，若DS18B20做出反应会将在15us~60us后将总线拉低
  45   1        i=4;                                     //15us~60us等待
  46   1        while(i>0)i--;
  47   1        //while(DS);
  48   1      }
  49          
  50          bit tmpreadbit(void)       //read a bit
  51          {
  52   1         uint i;
  53   1         bit dat;
  54   1         DS=0;i++;          //i++ for delay
  55   1         DS=1;i++;i++;
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 13:46:13 PAGE 2   

  56   1         dat=DS;
  57   1         i=8;while(i>0)i--;
  58   1         return (dat);
  59   1      }
  60          
  61          uchar tmpread(void)   //read a byte date
  62          {
  63   1        uchar i,j,dat;
  64   1        dat=0;
  65   1        for(i=1;i<=8;i++)
  66   1        {
  67   2          j=tmpreadbit();
  68   2          dat=(j<<7)|(dat>>1);   //读出的数据最低位在最前面，这样刚好一个字节在DAT里
  69   2        }
  70   1        return(dat);
  71   1      }
  72          
  73          void tmpwritebyte(uchar dat)   //write a byte to ds18b20
  74          {
  75   1        uint i;
  76   1        uchar j;
  77   1        bit testb;
  78   1        for(j=1;j<=8;j++)
  79   1        {
  80   2          testb=dat&0x01;
  81   2          dat=dat>>1;
  82   2          if(testb)     //write 1
  83   2          {
  84   3            DS=0;
  85   3            i++;i++;
  86   3            DS=1;
  87   3            i=8;while(i>0)i--;
  88   3          }
  89   2          else
  90   2          {
  91   3            DS=0;       //write 0
  92   3            i=8;while(i>0)i--;
  93   3            DS=1;
  94   3            i++;i++;
  95   3          }
  96   2      
  97   2        }
  98   1      }
  99          
 100          void tmpchange(void)  //DS18B20 begin change
 101          {
 102   1        dsreset();
 103   1        delay(1);
 104   1        tmpwritebyte(0xcc);  // address all drivers on bus
 105   1        tmpwritebyte(0x44);  //  initiates a single temperature conversion
 106   1        //delay(100);
 107   1      }
 108          
 109          uint tmp()               //get the temperature
 110          {
 111   1        float tt;
 112   1        uchar a,b;
 113   1        dsreset();
 114   1        delay(1);
 115   1        tmpwritebyte(0xcc);
 116   1        tmpwritebyte(0xbe);
 117   1        a=tmpread();//低八位
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 13:46:13 PAGE 3   

 118   1        b=tmpread();//高八位
 119   1        temp=b;
 120   1        temp<<=8;             //two byte  compose a int variable
 121   1        temp=temp|a;
 122   1        tt=temp*0.0625; //算出来的是测到的温度，数值可到小数点后两位
 123   1        temp=tt*10+0.5; //为了显示温度后的小数点后一位并作出四舍五入，因为取值运算不能取小数点后的数
 124   1        return temp;
 125   1      }
 126          
 127          void display(uint temp)                 //显示程序
 128          {
 129   1         uchar bai,shi1,shi0,ge;
 130   1         bai=temp/100;//温度数值上为十位
 131   1         shi0=temp%100;//温度数值上为几点几
 132   1         shi1=shi0/10;//温度上为个位，并且显示时需要加小数点
 133   1         ge=shi0%10;//温度上为小数位，并已经四舍五入
 134   1      
 135   1         wei1=1;              //显示百位
 136   1         wei2=0;
 137   1         wei3=0;
 138   1         wei4=0;
 139   1         P0=table[bai];
 140   1         delay(2);
 141   1      
 142   1         wei1=0;              //显示十位
 143   1         wei2=1;
 144   1         wei3=0;
 145   1         wei4=0;
 146   1         P0=table1[shi1];
 147   1         delay(2);
 148   1      
 149   1         wei1=0;              //显示个位
 150   1         wei2=0;
 151   1         wei3=1;
 152   1         wei4=0;
 153   1         P0=table[ge];
 154   1         delay(2);
 155   1      }
 156          
 157          
 158          void main()
 159          {
 160   1       uchar a;
 161   1        do
 162   1        {
 163   2          tmpchange();//让18b20开始转换温度
 164   2      
 165   2              for(a=100;a>0;a--)
 166   2              {   
 167   3                      display(tmp());
 168   3              }
 169   2        }while(1);
 170   1      }
 171          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 13:46:13 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
