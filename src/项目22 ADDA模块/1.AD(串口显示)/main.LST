C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************BST-V51实验开发板例程************************
   2          *  平台：BST-M51 + Keil U4 + STC89C52
   3          *  名称：AD\DA模块实验(串口显示)
   4          *  公司：深圳市亚博软件开发有限公司       
   5          *  日期：2015-6
   6          *  晶振:11.0592MHZ
   7          ******************************************************************/
   8          #include<reg52.h>    //包含单片机寄存器的头文件
   9          #include <intrins.h> 
  10          
  11          #define  AddWr 0x90    //PCF8591 地址
  12          
  13          // 变量定义
  14          unsigned char AD_CHANNEL=0;
  15          unsigned long xdata  LedOut[8];
  16          unsigned char  D[32];
  17          
  18          sbit scl=P2^0;       //I2C  时钟 
  19          sbit sda=P2^1;       //I2C  数据 
  20          bit ack;                 /*应答标志位*/
  21          
  22          unsigned char date;
  23          
  24          /*******************************************************************
  25                               起动总线函数               
  26          函数原型: void  Start_I2c();  
  27          功能:     启动I2C总线,即发送I2C起始条件.  
  28          ********************************************************************/
  29          void Start_I2c()
  30          {
  31   1        sda=1;         /*发送起始条件的数据信号*/
  32   1        _nop_();
  33   1        scl=1;
  34   1        _nop_();        /*起始条件建立时间大于4.7us,延时*/
  35   1        _nop_();
  36   1        _nop_();
  37   1        _nop_();
  38   1        _nop_();    
  39   1        sda=0;         /*发送起始信号*/
  40   1        _nop_();        /* 起始条件锁定时间大于4μs*/
  41   1        _nop_();
  42   1        _nop_();
  43   1        _nop_();
  44   1        _nop_();       
  45   1        scl=0;       /*钳住I2C总线，准备发送或接收数据 */
  46   1        _nop_();
  47   1        _nop_();
  48   1      }
  49          
  50          /*******************************************************************
  51                                结束总线函数               
  52          函数原型: void  Stop_I2c();  
  53          功能:     结束I2C总线,即发送I2C结束条件.  
  54          ********************************************************************/
  55          void Stop_I2c()
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 2   

  56          {
  57   1        sda=0;      /*发送结束条件的数据信号*/
  58   1        _nop_();       /*发送结束条件的时钟信号*/
  59   1        scl=1;      /*结束条件建立时间大于4μs*/
  60   1        _nop_();
  61   1        _nop_();
  62   1        _nop_();
  63   1        _nop_();
  64   1        _nop_();
  65   1        sda=1;      /*发送I2C总线结束信号*/
  66   1        _nop_();
  67   1        _nop_();
  68   1        _nop_();
  69   1        _nop_();
  70   1      }
  71          
  72          /*******************************************************************
  73                           字节数据发送函数               
  74          函数原型: void  I2C_SendByte(UCHAR c);
  75          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  76                    此状态位进行操作.(不应答或非应答都使ack=0)     
  77                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  78          ********************************************************************/
  79          void  I2C_SendByte(unsigned char  c)
  80          {
  81   1       unsigned char  i;
  82   1       
  83   1       for(i=0;i<8;i++)  /*要传送的数据长度为8位*/
  84   1          {
  85   2           if((c<<i)&0x80)sda=1;   /*判断发送位*/
  86   2             else  sda=0;                
  87   2           _nop_();
  88   2           scl=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  89   2            _nop_(); 
  90   2            _nop_();             /*保证时钟高电平周期大于4μs*/
  91   2            _nop_();
  92   2            _nop_();
  93   2            _nop_();         
  94   2           scl=0; 
  95   2          }
  96   1          
  97   1          _nop_();
  98   1          _nop_();
  99   1          sda=1;                /*8位发送完后释放数据线，准备接收应答位*/
 100   1          _nop_();
 101   1          _nop_();   
 102   1          scl=1;
 103   1          _nop_();
 104   1          _nop_();
 105   1          _nop_();
 106   1          if(sda==1)ack=0;     
 107   1             else ack=1;        /*判断是否接收到应答信号*/
 108   1          scl=0;
 109   1          _nop_();
 110   1          _nop_();
 111   1      }
 112          
 113          /*******************************************************************
 114                           字节数据接收函数               
 115          函数原型: UCHAR  I2C_RcvByte();
 116          功能:        用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 117                    发完后请用应答函数应答从机。  
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 3   

 118          ********************************************************************/    
 119          unsigned char   I2C_RcvByte()
 120          {
 121   1        unsigned char  retc=0,i; 
 122   1        sda=1;                     /*置数据线为输入方式*/
 123   1        for(i=0;i<8;i++)
 124   1            {
 125   2              _nop_();           
 126   2              scl=0;                  /*置时钟线为低，准备接收数据位*/
 127   2              _nop_();
 128   2              _nop_();                 /*时钟低电平周期大于4.7μs*/
 129   2              _nop_();
 130   2              _nop_();
 131   2              _nop_();
 132   2              scl=1;                  /*置时钟线为高使数据线上数据有效*/
 133   2              _nop_();
 134   2              _nop_();
 135   2              retc=retc<<1;
 136   2              if(sda==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
 137   2              _nop_();
 138   2              _nop_(); 
 139   2            }
 140   1        scl=0;    
 141   1        _nop_();
 142   1        _nop_();
 143   1        return(retc);
 144   1      }
 145          
 146          /********************************************************************
 147                               应答子函数
 148          函数原型:  void Ack_I2c(bit a);
 149          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 150          ********************************************************************/
 151          void Ack_I2c(bit a)
 152          {  
 153   1        if(a==0)sda=0;              /*在此发出应答或非应答信号 */
 154   1        else sda=1;                             /*0为发出应答，1为非应答信号 */
 155   1        _nop_();
 156   1        _nop_();
 157   1        _nop_();      
 158   1        scl=1;
 159   1        _nop_();
 160   1        _nop_();                    /*时钟低电平周期大于4μs*/
 161   1        _nop_();
 162   1        _nop_();
 163   1        _nop_();  
 164   1        scl=0;                     /*清时钟线，住I2C总线以便继续接收*/
 165   1        _nop_();
 166   1        _nop_();    
 167   1      }
 168          
 169          /************************************************************
 170          * 函数名        : Pcf8591_DaConversion
 171          * 函数功能      : PCF8591的输出端输出模拟量
 172          * 输入          : addr（器件地址），channel（转换通道），value（转换的数值）
 173          * 输出          : 无
 174          ******************* *****************************************/
 175          bit Pcf8591_DaConversion(unsigned char addr,unsigned char channel,  unsigned char Val)
 176          {
 177   1         Start_I2c();              //启动总线
 178   1         I2C_SendByte(addr);            //发送器件地址
 179   1         if(ack==0)return(0);
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 4   

 180   1         I2C_SendByte(0x40|channel);              //发送控制字节
 181   1         if(ack==0)return(0);
 182   1         I2C_SendByte(Val);            //发送DAC的数值  
 183   1         if(ack==0)return(0);
 184   1         Stop_I2c();               //结束总线
 185   1         return(1);
 186   1      }
 187          
 188          /************************************************************
 189          * 函数名        : Pcf8591_SendByte
 190          * 函数功能              : 写入一个控制命令
 191          * 输入          : addr（器件地址），channel（转换通道）
 192          * 输出          : 无
 193          ************************************************************/
 194          bit PCF8591_SendByte(unsigned char addr,unsigned char channel)
 195          {
 196   1         Start_I2c();              //启动总线
 197   1         I2C_SendByte(addr);            //发送器件地址
 198   1         if(ack==0)return(0);
 199   1         I2C_SendByte(0x40|channel);              //发送控制字节
 200   1         if(ack==0)return(0);
 201   1         Stop_I2c();               //结束总线
 202   1         return(1);
 203   1      }
 204          
 205          /************************************************************
 206          * 函数名        : PCF8591_RcvByte
 207          * 函数功能      : 读取一个转换值
 208          * 输入          :
 209          * 输出          : dat
 210          ************************************************************/
 211          unsigned char PCF8591_RcvByte(unsigned char addr)
 212          {  
 213   1         unsigned char dat;
 214   1      
 215   1         Start_I2c();          //启动总线
 216   1         I2C_SendByte(addr+1);      //发送器件地址
 217   1         if(ack==0)return(0);
 218   1         dat=I2C_RcvByte();          //读取数据0
 219   1      
 220   1         Ack_I2c(1);           //发送非应答信号
 221   1         Stop_I2c();           //结束总线
 222   1         return(dat);
 223   1      }
 224          /*------------------------------------------------
 225                           串口初始化函数
 226          ------------------------------------------------*/
 227          void init_com(void)
 228          {
 229   1       EA=1;        //开总中断
 230   1       ES=1;        //允许串口中断
 231   1       ET1=1;        //允许定时器T1的中断
 232   1       TMOD=0x20;   //定时器T1，在方式2中断产生波特率
 233   1       PCON=0x00;   //SMOD=0
 234   1       SCON=0x50;   // 方式1 由定时器控制
 235   1       TH1=0xfd;    //波特率设置为9600
 236   1       TL1=0xfd;
 237   1       TR1=1;       //开定时器T1运行控制位
 238   1      
 239   1      }
 240          /*------------------------------------------------
 241                            延时函数
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 5   

 242          ------------------------------------------------*/
 243          void delay(unsigned char i)
 244          {
 245   1        unsigned char j,k; 
 246   1        for(j=i;j>0;j--)
 247   1          for(k=125;k>0;k--);
 248   1      }
 249          /*------------------------------------------------
 250          把读取值转换成一个一个的字符，给串口显示
 251          ------------------------------------------------*/
 252          void To_ascii(unsigned char num)
 253          {       
 254   1               SBUF=num/100+'0';                         
 255   1               delay(200);              
 256   1               SBUF=num/10%10+'0';                       
 257   1               delay(200);    
 258   1               SBUF=num%10+'0';
 259   1               delay(200);
 260   1      }
 261          /*------------------------------------------------
 262                              主函数
 263          ------------------------------------------------*/
 264          main()
 265          {  
 266   1      
 267   1              init_com();
 268   1              while(1)
 269   1              {
 270   2      
 271   2              /********以下AD-DA处理*************/  
 272   2              
 273   2                  switch(AD_CHANNEL)
 274   2                      {
 275   3                              case 0: PCF8591_SendByte(AddWr,1);
 276   3                                   D[0]=PCF8591_RcvByte(AddWr);  //ADC0 模数转换1      光敏电阻
 277   3                                       break;  
 278   3                              
 279   3                              case 1: PCF8591_SendByte(AddWr,2);
 280   3                                   D[1]=PCF8591_RcvByte(AddWr);  //ADC1  模数转换2      热敏电阻
 281   3                                       break;  
 282   3                              
 283   3                              case 2: PCF8591_SendByte(AddWr,3);
 284   3                                   D[2]=PCF8591_RcvByte(AddWr);  //ADC2       模数转换3          悬空
 285   3                                       break;  
 286   3                              
 287   3                              case 3: PCF8591_SendByte(AddWr,0);
 288   3                                   D[3]=PCF8591_RcvByte(AddWr);  //ADC3   模数转换4      可调0-5v
 289   3                                       break;  
 290   3                              
 291   3                              case 4: Pcf8591_DaConversion(AddWr,0, D[4]); //DAC        数模转换
 292   3                                   break;
 293   3                       
 294   3                      }
 295   2      
 296   2              D[4]=D[3];  //把模拟输入采样的信号 通过数模转换输出
 297   2                              
 298   2                 if(++AD_CHANNEL>4) AD_CHANNEL=0;
 299   2              
 300   2                 /********以下将AD的值通过串口发送出去*************/
 301   2               delay(200);    
 302   2               To_ascii(D[0]);
 303   2               SBUF=' ';
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:02:47 PAGE 6   

 304   2               delay(200);                       
 305   2               To_ascii(D[1]);
 306   2               SBUF=' ';
 307   2               delay(200);
 308   2               To_ascii(D[2]);
 309   2               SBUF=' ';
 310   2               delay(200);
 311   2               To_ascii(D[3]);
 312   2               SBUF='\n';
 313   2               delay(200);
 314   2               if(RI)
 315   2              {
 316   3                      date=SBUF;    //单片机接受
 317   3                      SBUF=date;    //单片机发送
 318   3                      RI=0;
 319   3              }        
 320   2         }
 321   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    489    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
