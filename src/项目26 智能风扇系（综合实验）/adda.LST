C51 COMPILER V9.00   ADDA                                                                  08/22/2015 15:14:20 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADDA
OBJECT MODULE PLACED IN adda.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE adda.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************BST-V51实验开发板例程************************
   2          *  平台：BST-M51 + Keil U4 + STC89C52
   3          *  名称：LCD1602模块实验
   4          *  公司：深圳市亚博软件开发有限公司       
   5          *  日期：2015-8
   6          *  晶振:11.0592MHZ
   7          *  说明：免费开源，不提供源代码分析.
   8          ******************************************************************/
   9          #include<reg51.h>    //包含单片机寄存器的头文件
  10          #include <intrins.h> 
  11          #include<allhead.h>
  12          
  13          #define  AddWr 0x90    //PCF8591 地址
  14          
  15          // 变量定义
  16          unsigned char AD_CHANNEL=0;
  17          unsigned char  D[32];
  18          
  19          sbit scl=P2^0;       //I2C  时钟 
  20          sbit sda=P2^1;       //I2C  数据 
  21          bit ack;                 /*应答标志位*/
  22          
  23          unsigned char date;
  24          
  25          /*******************************************************************
  26                               起动总线函数               
  27          函数原型: void  Start_I2c();  
  28          功能:     启动I2C总线,即发送I2C起始条件.  
  29          ********************************************************************/
  30          void Start_I2c()
  31          {
  32   1        sda=1;         /*发送起始条件的数据信号*/
  33   1        _nop_();
  34   1        scl=1;
  35   1        _nop_();        /*起始条件建立时间大于4.7us,延时*/
  36   1        _nop_();
  37   1        _nop_();
  38   1        _nop_();
  39   1        _nop_();    
  40   1        sda=0;         /*发送起始信号*/
  41   1        _nop_();        /* 起始条件锁定时间大于4μs*/
  42   1        _nop_();
  43   1        _nop_();
  44   1        _nop_();
  45   1        _nop_();       
  46   1        scl=0;       /*钳住I2C总线，准备发送或接收数据 */
  47   1        _nop_();
  48   1        _nop_();
  49   1      }
  50          
  51          /*******************************************************************
  52                                结束总线函数               
  53          函数原型: void  Stop_I2c();  
  54          功能:     结束I2C总线,即发送I2C结束条件.  
  55          ********************************************************************/
C51 COMPILER V9.00   ADDA                                                                  08/22/2015 15:14:20 PAGE 2   

  56          void Stop_I2c()
  57          {
  58   1        sda=0;      /*发送结束条件的数据信号*/
  59   1        _nop_();       /*发送结束条件的时钟信号*/
  60   1        scl=1;      /*结束条件建立时间大于4μs*/
  61   1        _nop_();
  62   1        _nop_();
  63   1        _nop_();
  64   1        _nop_();
  65   1        _nop_();
  66   1        sda=1;      /*发送I2C总线结束信号*/
  67   1        _nop_();
  68   1        _nop_();
  69   1        _nop_();
  70   1        _nop_();
  71   1      }
  72          
  73          /*******************************************************************
  74                           字节数据发送函数               
  75          函数原型: void  I2C_SendByte(UCHAR c);
  76          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  77                    此状态位进行操作.(不应答或非应答都使ack=0)     
  78                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  79          ********************************************************************/
  80          void  I2C_SendByte(unsigned char  c)
  81          {
  82   1       unsigned char  i;
  83   1       
  84   1       for(i=0;i<8;i++)  /*要传送的数据长度为8位*/
  85   1          {
  86   2           if((c<<i)&0x80)sda=1;   /*判断发送位*/
  87   2             else  sda=0;                
  88   2           _nop_();
  89   2           scl=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  90   2            _nop_(); 
  91   2            _nop_();             /*保证时钟高电平周期大于4μs*/
  92   2            _nop_();
  93   2            _nop_();
  94   2            _nop_();         
  95   2           scl=0; 
  96   2          }
  97   1          
  98   1          _nop_();
  99   1          _nop_();
 100   1          sda=1;                /*8位发送完后释放数据线，准备接收应答位*/
 101   1          _nop_();
 102   1          _nop_();   
 103   1          scl=1;
 104   1          _nop_();
 105   1          _nop_();
 106   1          _nop_();
 107   1          if(sda==1)ack=0;     
 108   1             else ack=1;        /*判断是否接收到应答信号*/
 109   1          scl=0;
 110   1          _nop_();
 111   1          _nop_();
 112   1      }
 113          
 114          /*******************************************************************
 115                           字节数据接收函数               
 116          函数原型: UCHAR  I2C_RcvByte();
 117          功能:        用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
C51 COMPILER V9.00   ADDA                                                                  08/22/2015 15:14:20 PAGE 3   

 118                    发完后请用应答函数应答从机。  
 119          ********************************************************************/    
 120          unsigned char   I2C_RcvByte()
 121          {
 122   1        unsigned char  retc=0,i; 
 123   1        sda=1;                     /*置数据线为输入方式*/
 124   1        for(i=0;i<8;i++)
 125   1            {
 126   2              _nop_();           
 127   2              scl=0;                  /*置时钟线为低，准备接收数据位*/
 128   2              _nop_();
 129   2              _nop_();                 /*时钟低电平周期大于4.7μs*/
 130   2              _nop_();
 131   2              _nop_();
 132   2              _nop_();
 133   2              scl=1;                  /*置时钟线为高使数据线上数据有效*/
 134   2              _nop_();
 135   2              _nop_();
 136   2              retc=retc<<1;
 137   2              if(sda==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
 138   2              _nop_();
 139   2              _nop_(); 
 140   2            }
 141   1        scl=0;    
 142   1        _nop_();
 143   1        _nop_();
 144   1        return(retc);
 145   1      }
 146          
 147          /********************************************************************
 148                               应答子函数
 149          函数原型:  void Ack_I2c(bit a);
 150          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 151          ********************************************************************/
 152          void Ack_I2c(bit a)
 153          {  
 154   1        if(a==0)sda=0;              /*在此发出应答或非应答信号 */
 155   1        else sda=1;                             /*0为发出应答，1为非应答信号 */
 156   1        _nop_();
 157   1        _nop_();
 158   1        _nop_();      
 159   1        scl=1;
 160   1        _nop_();
 161   1        _nop_();                    /*时钟低电平周期大于4μs*/
 162   1        _nop_();
 163   1        _nop_();
 164   1        _nop_();  
 165   1        scl=0;                     /*清时钟线，住I2C总线以便继续接收*/
 166   1        _nop_();
 167   1        _nop_();    
 168   1      }
 169          
 170          /************************************************************
 171          * 函数名        : Pcf8591_DaConversion
 172          * 函数功能      : PCF8591的输出端输出模拟量
 173          * 输入          : addr（器件地址），channel（转换通道），value（转换的数值）
 174          * 输出          : 无
 175          ******************* *****************************************/
 176          bit Pcf8591_DaConversion(unsigned char addr,unsigned char channel,  unsigned char Val)
 177          {
 178   1         Start_I2c();              //启动总线
 179   1         I2C_SendByte(addr);            //发送器件地址
C51 COMPILER V9.00   ADDA                                                                  08/22/2015 15:14:20 PAGE 4   

 180   1         if(ack==0)return(0);
 181   1         I2C_SendByte(0x40|channel);              //发送控制字节
 182   1         if(ack==0)return(0);
 183   1         I2C_SendByte(Val);            //发送DAC的数值  
 184   1         if(ack==0)return(0);
 185   1         Stop_I2c();               //结束总线
 186   1         return(1);
 187   1      }
 188          
 189          /************************************************************
 190          * 函数名        : Pcf8591_SendByte
 191          * 函数功能              : 写入一个控制命令
 192          * 输入          : addr（器件地址），channel（转换通道）
 193          * 输出          : 无
 194          ************************************************************/
 195          bit PCF8591_SendByte(unsigned char channel)
 196          {
 197   1         Start_I2c();              //启动总线
 198   1         I2C_SendByte(AddWr);            //发送器件地址
 199   1         if(ack==0)return(0);
 200   1         I2C_SendByte(0x40|channel);              //发送控制字节
 201   1         if(ack==0)return(0);
 202   1         Stop_I2c();               //结束总线
 203   1         return(1);
 204   1      }
 205          
 206          /************************************************************
 207          * 函数名        : PCF8591_RcvByte
 208          * 函数功能      : 读取一个转换值
 209          * 输入          :
 210          * 输出          : dat
 211          ************************************************************/
 212          unsigned char PCF8591_RcvByte()
 213          {  
 214   1         unsigned char dat;
 215   1      
 216   1         Start_I2c();          //启动总线
 217   1         I2C_SendByte(AddWr+1);      //发送器件地址
 218   1         if(ack==0)return(0);
 219   1         dat=I2C_RcvByte();          //读取数据0
 220   1      
 221   1         Ack_I2c(1);           //发送非应答信号
 222   1         Stop_I2c();           //结束总线
 223   1         return(dat);
 224   1      }
 225          /*------------------------------------------------
 226          把读取值转换成一个一个的字符，给串口显示
 227          ------------------------------------------------*/
 228          void To_ascii(unsigned char num)
 229          {       
 230   1               SBUF=num/100+'0';                         
 231   1               delayMs(200);            
 232   1               SBUF=num/10%10+'0';                       
 233   1               delayMs(200);  
 234   1               SBUF=num%10+'0';
 235   1               delayMs(200);
 236   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.00   ADDA                                                                  08/22/2015 15:14:20 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
