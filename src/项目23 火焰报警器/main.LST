C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:28:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************BST-M51实验开发板例程************************
   2          *  平台：BST-M51 + Keil U4 + STC89C52
   3          *  名称：火焰传感器报警实验
   4          *  公司：深圳市亚博软件开发有限公司       
   5          *  日期：2015-6
   6          *  晶振:11.0592MHZ
   7          ******************************************************************/
   8          #include<reg52.h>    //包含单片机寄存器的头文件
   9          #include <intrins.h> 
  10          
  11          #define  AddWr 0x90    //PCF8591 地址
  12          
  13          // 变量定义
  14          unsigned char AD_CHANNEL;
  15          unsigned char  D[32];
  16          
  17          sbit scl=P2^0;       //I2C  时钟 
  18          sbit sda=P2^1;       //I2C  数据
  19          sbit beep=P2^3;      //蜂鸣器 
  20          bit ack;                 /*应答标志位*/
  21          
  22          /*******************************************************************
  23                               起动总线函数               
  24          函数原型: void  Start_I2c();  
  25          功能:     启动I2C总线,即发送I2C起始条件.  
  26          ********************************************************************/
  27          void Start_I2c()
  28          {
  29   1        sda=1;         /*发送起始条件的数据信号*/
  30   1        _nop_();
  31   1        scl=1;
  32   1        _nop_();        /*起始条件建立时间大于4.7us,延时*/
  33   1        _nop_();
  34   1        _nop_();
  35   1        _nop_();
  36   1        _nop_();    
  37   1        sda=0;         /*发送起始信号*/
  38   1        _nop_();        /* 起始条件锁定时间大于4μs*/
  39   1        _nop_();
  40   1        _nop_();
  41   1        _nop_();
  42   1        _nop_();       
  43   1        scl=0;       /*钳住I2C总线，准备发送或接收数据 */
  44   1        _nop_();
  45   1        _nop_();
  46   1      }
  47          
  48          /*******************************************************************
  49                                结束总线函数               
  50          函数原型: void  Stop_I2c();  
  51          功能:     结束I2C总线,即发送I2C结束条件.  
  52          ********************************************************************/
  53          void Stop_I2c()
  54          {
  55   1        sda=0;      /*发送结束条件的数据信号*/
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:28:12 PAGE 2   

  56   1        _nop_();       /*发送结束条件的时钟信号*/
  57   1        scl=1;      /*结束条件建立时间大于4μs*/
  58   1        _nop_();
  59   1        _nop_();
  60   1        _nop_();
  61   1        _nop_();
  62   1        _nop_();
  63   1        sda=1;      /*发送I2C总线结束信号*/
  64   1        _nop_();
  65   1        _nop_();
  66   1        _nop_();
  67   1        _nop_();
  68   1      }
  69          
  70          /*******************************************************************
  71                           字节数据发送函数               
  72          函数原型: void  I2C_SendByte(UCHAR c);
  73          功能:     将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  74                    此状态位进行操作.(不应答或非应答都使ack=0)     
  75                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  76          ********************************************************************/
  77          void  I2C_SendByte(unsigned char  c)
  78          {
  79   1       unsigned char  i;
  80   1       
  81   1       for(i=0;i<8;i++)  /*要传送的数据长度为8位*/
  82   1          {
  83   2           if((c<<i)&0x80)sda=1;   /*判断发送位*/
  84   2             else  sda=0;                
  85   2           _nop_();
  86   2           scl=1;               /*置时钟线为高，通知被控器开始接收数据位*/
  87   2            _nop_(); 
  88   2            _nop_();             /*保证时钟高电平周期大于4μs*/
  89   2            _nop_();
  90   2            _nop_();
  91   2            _nop_();         
  92   2           scl=0; 
  93   2          }
  94   1          
  95   1          _nop_();
  96   1          _nop_();
  97   1          sda=1;                /*8位发送完后释放数据线，准备接收应答位*/
  98   1          _nop_();
  99   1          _nop_();   
 100   1          scl=1;
 101   1          _nop_();
 102   1          _nop_();
 103   1          _nop_();
 104   1          if(sda==1)ack=0;     
 105   1             else ack=1;        /*判断是否接收到应答信号*/
 106   1          scl=0;
 107   1          _nop_();
 108   1          _nop_();
 109   1      }
 110          
 111          /*******************************************************************
 112                           字节数据接收函数               
 113          函数原型: UCHAR  I2C_RcvByte();
 114          功能:        用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 115                    发完后请用应答函数应答从机。  
 116          ********************************************************************/    
 117          unsigned char   I2C_RcvByte()
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:28:12 PAGE 3   

 118          {
 119   1        unsigned char  retc=0,i; 
 120   1        sda=1;                     /*置数据线为输入方式*/
 121   1        for(i=0;i<8;i++)
 122   1            {
 123   2              _nop_();           
 124   2              scl=0;                  /*置时钟线为低，准备接收数据位*/
 125   2              _nop_();
 126   2              _nop_();                 /*时钟低电平周期大于4.7μs*/
 127   2              _nop_();
 128   2              _nop_();
 129   2              _nop_();
 130   2              scl=1;                  /*置时钟线为高使数据线上数据有效*/
 131   2              _nop_();
 132   2              _nop_();
 133   2              retc=retc<<1;
 134   2              if(sda==1)retc=retc+1;  /*读数据位,接收的数据位放入retc中 */
 135   2              _nop_();
 136   2              _nop_(); 
 137   2            }
 138   1        scl=0;    
 139   1        _nop_();
 140   1        _nop_();
 141   1        return(retc);
 142   1      }
 143          
 144          /********************************************************************
 145                               应答子函数
 146          函数原型:  void Ack_I2c(bit a);
 147          功能:      主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 148          ********************************************************************/
 149          void Ack_I2c(bit a)
 150          {  
 151   1        if(a==0)sda=0;              /*在此发出应答或非应答信号 */
 152   1        else sda=1;                             /*0为发出应答，1为非应答信号 */
 153   1        _nop_();
 154   1        _nop_();
 155   1        _nop_();      
 156   1        scl=1;
 157   1        _nop_();
 158   1        _nop_();                    /*时钟低电平周期大于4μs*/
 159   1        _nop_();
 160   1        _nop_();
 161   1        _nop_();  
 162   1        scl=0;                     /*清时钟线，住I2C总线以便继续接收*/
 163   1        _nop_();
 164   1        _nop_();    
 165   1      }
 166          
 167          /************************************************************
 168          * 函数名        : Pcf8591_DaConversion
 169          * 函数功能      : PCF8591的输出端输出模拟量
 170          * 输入          : addr（器件地址），channel（转换通道），value（转换的数值）
 171          * 输出          : 无
 172          ******************* *****************************************/
 173          bit Pcf8591_DaConversion(unsigned char addr,unsigned char channel,  unsigned char Val)
 174          {
 175   1         Start_I2c();              //启动总线
 176   1         I2C_SendByte(addr);            //发送器件地址
 177   1         if(ack==0)return(0);
 178   1         I2C_SendByte(0x40|channel);              //发送控制字节
 179   1         if(ack==0)return(0);
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:28:12 PAGE 4   

 180   1         I2C_SendByte(Val);            //发送DAC的数值  
 181   1         if(ack==0)return(0);
 182   1         Stop_I2c();               //结束总线
 183   1         return(1);
 184   1      }
 185          
 186          /************************************************************
 187          * 函数名        : Pcf8591_SendByte
 188          * 函数功能              : 写入一个控制命令
 189          * 输入          : addr（器件地址），channel（转换通道）
 190          * 输出          : 无
 191          ************************************************************/
 192          bit PCF8591_SendByte(unsigned char addr,unsigned char channel)
 193          {
 194   1         Start_I2c();              //启动总线
 195   1         I2C_SendByte(addr);            //发送器件地址
 196   1         if(ack==0)return(0);
 197   1         I2C_SendByte(0x40|channel);              //发送控制字节
 198   1         if(ack==0)return(0);
 199   1         Stop_I2c();               //结束总线
 200   1         return(1);
 201   1      }
 202          
 203          /************************************************************
 204          * 函数名        : PCF8591_RcvByte
 205          * 函数功能      : 读取一个转换值
 206          * 输入          :
 207          * 输出          : dat
 208          ************************************************************/
 209          unsigned char PCF8591_RcvByte(unsigned char addr)
 210          {  
 211   1         unsigned char dat;
 212   1      
 213   1         Start_I2c();          //启动总线
 214   1         I2C_SendByte(addr+1);      //发送器件地址
 215   1         if(ack==0)return(0);
 216   1         dat=I2C_RcvByte();          //读取数据0
 217   1      
 218   1         Ack_I2c(1);           //发送非应答信号
 219   1         Stop_I2c();           //结束总线
 220   1         return(dat);
 221   1      }
 222          void delay()               //大概0.5ms左右的延时
 223          {
 224   1              unsigned char a;
 225   1              for(a=450;a>0;a--)
 226   1              {
 227   2              }
 228   1      }
 229          /*------------------------------------------------
 230                              主函数
 231          ------------------------------------------------*/
 232          main()
 233          {  
 234   1              while(1)
 235   1              {
 236   2                      PCF8591_SendByte(AddWr,2);
 237   2                      D[2]=PCF8591_RcvByte(AddWr);   
 238   2                      if(D[2]>245)
 239   2                      {
 240   3                              unsigned int m;
 241   3                              for(m=800;m>0;m--)        //持续时间0.5ms*800
C51 COMPILER V9.00   MAIN                                                                  08/22/2015 14:28:12 PAGE 5   

 242   3                              {
 243   4                                      beep=~beep;
 244   4              
 245   4                                      delay();                 //2000HZ的信号。
 246   4                              }
 247   3                              P1=~P1;
 248   3                              for(m=500;m>0;m--)       //持续时间0.5ms*2*500
 249   3                              {
 250   4                                      beep=~beep;     
 251   4                                      delay();
 252   4                                      delay();                //1000HZ的信号。
 253   4                              }
 254   3                              P1=~P1; 
 255   3                      } 
 256   2              }
 257   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    353    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
